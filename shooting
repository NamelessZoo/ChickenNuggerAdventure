import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.Timer;

public class WalkingFrame extends JFrame implements ActionListener {
	private Man man;
	private Bullet ball;
	private ArrayList<Bullet> balls;
	public WalkingFrame() {
		setBounds(100,100,600,400);
		man = new Man(0,0);
		balls = new ArrayList<Bullet>();
		add(man);
		setLayout(null);
		Timer timer = new Timer(10,this);
		timer.start();
		addKeyListener(new KeyListener() {

			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub
				if(e.getKeyCode()==e.VK_W) {
					man.setDY(-2);
				}
				if(e.getKeyCode()==e.VK_A) {
					man.setDX(-2);
				}
				if(e.getKeyCode()==e.VK_S) {
					man.setDY(+2);
				}
				if(e.getKeyCode()==e.VK_D) {
					man.setDX(+2);
				}
				if(e.getKeyCode()==e.VK_T) {
					ball = new Bullet(man.getX(), man.getY()+8);
					balls.add(ball);
					add(ball);
					if(man.getDX() >= 0) {
						ball.setBX(+10);
					}
					if(man.getDX() < 0) {
						ball.setBX(-10);
					}
				}
			}

			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				if(e.getKeyCode()==e.VK_W) {
					man.setDY(0);
				}
				if(e.getKeyCode()==e.VK_A) {
					man.setDX(0);
				}
				if(e.getKeyCode()==e.VK_S) {
					man.setDY(0);
				}
				if(e.getKeyCode()==e.VK_D) {
					man.setDX(0);
				}
				
			}

			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
		});
		setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}
	public static void main(String[] args) {
		new WalkingFrame();
	}
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		man.update();
		for(int i = 0; i<balls.size(); i++) {
			balls.get(i).update();
			if(balls.get(i).getX() > getWidth() || balls.get(i).getX() < 0 || balls.get(i).getY() < 0 || balls.get(i).getY() > getHeight()) {
				remove(balls.get(i));
				balls.remove(balls.get(i));
			}
		}
		repaint();
	}
}
